{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport GenerateImageForm from \"./GenerateImageForm\";\nimport CreateLoraForm from \"./CreateLoraForm\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    page = _useState2[0],\n    setPage = _useState2[1];\n  if (page == 1) {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.button,\n        children: _jsx(Button, {\n          title: \"GENERATE IMAGE\",\n          onPress: setPage(3),\n          children: \" GENERATE \"\n        })\n      }), _jsx(View, {\n        style: styles.button,\n        children: _jsx(Button, {\n          title: \"CREATE YOUR LORA\",\n          onPress: setPage(2),\n          children: \" CREATE \"\n        })\n      })]\n    });\n  }\n  if (page == 2) {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(GenerateImageForm, {}), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    });\n  }\n  if (page == 3) {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(GenerateImageForm, {}), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    });\n  }\n}\nvar WINDOW_HEIGHT = Dimensions.get('window').height;\nvar WINDOW_WIDTH = Dimensions.get('window').width;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  form_container: {\n    width: '80%',\n    height: 200,\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  form_element: {\n    width: '100%',\n    maxWidth: WINDOW_HEIGHT - 100,\n    margin: 4\n  },\n  text_input: {\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 4\n  },\n  button: {\n    width: '100%',\n    maxWidth: WINDOW_HEIGHT - 100,\n    backgroundColor: 'red'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","GenerateImageForm","CreateLoraForm","Dimensions","jsx","_jsx","jsxs","_jsxs","App","_useState","useState","_useState2","_slicedToArray","page","setPage","style","styles","container","children","button","Button","title","onPress","WINDOW_HEIGHT","get","height","WINDOW_WIDTH","width","create","flex","backgroundColor","alignItems","justifyContent","form_container","form_element","maxWidth","margin","text_input","borderWidth","borderRadius"],"sources":["Z:/image-generator-front-end/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, View } from 'react-native';\nimport GenerateImageForm from './GenerateImageForm'\nimport CreateLoraForm from './CreateLoraForm'\nimport {Dimensions} from 'react-native';\n\n/* --------------------------------------------------------------------------------------------------------------------------------------------------- |\n> APP HOOK:\n----------------------------------------------------------------------------------------------------------------------------------------------- Gladdo */\n\nexport default function App() {\n  const [page, setPage] = useState(1);\n\n  if(page==1){\n    return(\n      <View style={styles.container}>\n        <View style={styles.button}>\n            <Button  title=\"GENERATE IMAGE\" onPress={setPage(3)} > GENERATE </Button>\n        </View>\n        <View style={styles.button}>\n            <Button  title=\"CREATE YOUR LORA\" onPress={setPage(2)} > CREATE </Button>\n        </View>\n      </View>);\n  }\n  if(page==2){\n    return(\n    <View style={styles.container}>\n      <GenerateImageForm />\n      <StatusBar style=\"auto\" />\n    </View>);\n  }\n  if(page==3){\n    return(\n      <View style={styles.container}>\n        <GenerateImageForm />\n        <StatusBar style=\"auto\" />\n      </View>);\n  }\n}\n//<GenerateImageForm /> \n\n// Gladdo: Uutils variables:\nconst WINDOW_HEIGHT = Dimensions.get('window').height;\nconst WINDOW_WIDTH = Dimensions.get('window').width;\n\n/* --------------------------------------------------------------------------------------------------------------------------------------------------- |\n> STYLE:\n----------------------------------------------------------------------------------------------------------------------------------------------- Gladdo */\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  form_container: {\n    width: '80%',\n    height: 200,\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  form_element: {\n    width: '100%',\n    maxWidth: WINDOW_HEIGHT-100,\n    margin: 4,\n  }, \n\n  text_input: {\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 4,\n  },\n\n  button: {\n    width: '100%',\n    maxWidth: WINDOW_HEIGHT-100,\n    backgroundColor: 'red',\n  }, \n\n});\n\n\n\n/* --------------------------------------------------------------------------------------------------------\nSNIPPETS:\n-----------------------------------------------------------------------------------------------------------\n\n--------------------\n>>> Funzione che fetcha delle risorse json e ci popola un attributo dello stato della funzione (poi_name)\n--------------------\n\n  function foo(){\n    const [poi_name, setPoiName] = useState(\"\");\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n      fetch(\"http://127.0.0.1:8000/diffusers_api/test_serializer\")\n      .then( (response) =>  response.json())\n      .then( \n        json => {\n          setPoiName(json['pois']);\n          console.log(json['pois']);\n          setLoaded(true);\n        }\n      )\n    }, []);\n\n    return\n\n  }\n\n--------------------\n--------------------\n*/\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAE5C,OAAOC,iBAAiB;AACxB,OAAOC,cAAc;AAAwB,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAO7C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAwBC,QAAQ,CAAC,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAA5BI,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpB,IAAGE,IAAI,IAAE,CAAC,EAAC;IACT,OACEN,KAAA,CAACP,IAAI;MAACe,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAC,QAAA,GAC5Bb,IAAA,CAACL,IAAI;QAACe,KAAK,EAAEC,MAAM,CAACG,MAAO;QAAAD,QAAA,EACvBb,IAAA,CAACe,MAAM;UAAEC,KAAK,EAAC,gBAAgB;UAACC,OAAO,EAAER,OAAO,CAAC,CAAC,CAAE;UAAAI,QAAA,EAAE;QAAU,CAAQ;MAAC,CACvE,CAAC,EACPb,IAAA,CAACL,IAAI;QAACe,KAAK,EAAEC,MAAM,CAACG,MAAO;QAAAD,QAAA,EACvBb,IAAA,CAACe,MAAM;UAAEC,KAAK,EAAC,kBAAkB;UAACC,OAAO,EAAER,OAAO,CAAC,CAAC,CAAE;UAAAI,QAAA,EAAE;QAAQ,CAAQ;MAAC,CACvE,CAAC;IAAA,CACH,CAAC;EACX;EACA,IAAGL,IAAI,IAAE,CAAC,EAAC;IACT,OACAN,KAAA,CAACP,IAAI;MAACe,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAC,QAAA,GAC5Bb,IAAA,CAACJ,iBAAiB,IAAE,CAAC,EACrBI,IAAA,CAACP,SAAS;QAACiB,KAAK,EAAC;MAAM,CAAE,CAAC;IAAA,CACtB,CAAC;EACT;EACA,IAAGF,IAAI,IAAE,CAAC,EAAC;IACT,OACEN,KAAA,CAACP,IAAI;MAACe,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAC,QAAA,GAC5Bb,IAAA,CAACJ,iBAAiB,IAAE,CAAC,EACrBI,IAAA,CAACP,SAAS;QAACiB,KAAK,EAAC;MAAM,CAAE,CAAC;IAAA,CACtB,CAAC;EACX;AACF;AAIA,IAAMQ,aAAa,GAAGpB,UAAU,CAACqB,GAAG,CAAC,QAAQ,CAAC,CAACC,MAAM;AACrD,IAAMC,YAAY,GAAGvB,UAAU,CAACqB,GAAG,CAAC,QAAQ,CAAC,CAACG,KAAK;AAMnD,IAAMX,MAAM,GAAGjB,UAAU,CAAC6B,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EAEDC,cAAc,EAAE;IACdN,KAAK,EAAE,KAAK;IACZF,MAAM,EAAE,GAAG;IACXI,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EAEDE,YAAY,EAAE;IACZP,KAAK,EAAE,MAAM;IACbQ,QAAQ,EAAEZ,aAAa,GAAC,GAAG;IAC3Ba,MAAM,EAAE;EACV,CAAC;EAEDC,UAAU,EAAE;IACVZ,MAAM,EAAE,EAAE;IACVa,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE;EAChB,CAAC;EAEDpB,MAAM,EAAE;IACNQ,KAAK,EAAE,MAAM;IACbQ,QAAQ,EAAEZ,aAAa,GAAC,GAAG;IAC3BO,eAAe,EAAE;EACnB;AAEF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}