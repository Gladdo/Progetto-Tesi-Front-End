{"ast":null,"code":"import React from 'react';\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar WINDOW_HEIGHT = Dimensions.get('window').height;\nexport default function CreateLoraForm() {\n  if (Platform.OS === 'web') {\n    return _jsx(View, {\n      style: styles.form_container,\n      children: _jsx(View, {\n        style: styles.button,\n        children: _jsx(Button, {\n          title: \"REDIREC TO LORA UPLOAD PAGE\",\n          onPress: function onPress() {\n            Linking.openURL('http://127.0.0.1:8000/diffusers_api/lora_training');\n          },\n          children: \" REDIRECT \"\n        })\n      })\n    });\n  } else if (Platform.OS === 'android') {}\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  form_container: {\n    width: '80%',\n    height: 200,\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  form_element: {\n    width: '100%',\n    maxWidth: WINDOW_HEIGHT - 100,\n    margin: 4\n  },\n  text_input: {\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 4\n  },\n  button: {\n    width: '100%',\n    maxWidth: WINDOW_HEIGHT - 100,\n    backgroundColor: 'red'\n  }\n});","map":{"version":3,"names":["React","Linking","StyleSheet","View","Button","Platform","Dimensions","jsx","_jsx","WINDOW_HEIGHT","get","height","CreateLoraForm","OS","style","styles","form_container","children","button","title","onPress","openURL","create","container","flex","backgroundColor","alignItems","justifyContent","width","form_element","maxWidth","margin","text_input","borderWidth","borderRadius"],"sources":["Z:/image-generator-front-end/code/web/CreateLoraForm.js"],"sourcesContent":["import React from 'react';\r\nimport { Linking, StyleSheet, View, Button, Platform} from 'react-native';\r\n\r\nimport {Dimensions} from 'react-native';\r\n\r\nconst WINDOW_HEIGHT = Dimensions.get('window').height;\r\n\r\nexport default function CreateLoraForm(){\r\n    if (Platform.OS === 'web') \r\n    {\r\n        return(\r\n            <View style={styles.form_container}>\r\n                <View style={styles.button}>\r\n                    <Button title=\"REDIREC TO LORA UPLOAD PAGE\"onPress={()=>{Linking.openURL('http://127.0.0.1:8000/diffusers_api/lora_training')}} > REDIRECT </Button>\r\n                </View>\r\n            </View>\r\n        )\r\n    } \r\n    else if (Platform.OS === 'android') \r\n    {\r\n        \r\n    } \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n  \r\n    form_container: {\r\n      width: '80%',\r\n      height: 200,\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n  \r\n    form_element: {\r\n      width: '100%',\r\n      maxWidth: WINDOW_HEIGHT-100,\r\n      margin: 4,\r\n    }, \r\n  \r\n    text_input: {\r\n      height: 40,\r\n      borderWidth: 1,\r\n      borderRadius: 4,\r\n    },\r\n  \r\n    button: {\r\n      width: '100%',\r\n      maxWidth: WINDOW_HEIGHT-100,\r\n      backgroundColor: 'red',\r\n    }, \r\n  \r\n  });"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,OAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAK1B,IAAMC,aAAa,GAAGH,UAAU,CAACI,GAAG,CAAC,QAAQ,CAAC,CAACC,MAAM;AAErD,eAAe,SAASC,cAAcA,CAAA,EAAE;EACpC,IAAIP,QAAQ,CAACQ,EAAE,KAAK,KAAK,EACzB;IACI,OACIL,IAAA,CAACL,IAAI;MAACW,KAAK,EAAEC,MAAM,CAACC,cAAe;MAAAC,QAAA,EAC/BT,IAAA,CAACL,IAAI;QAACW,KAAK,EAAEC,MAAM,CAACG,MAAO;QAAAD,QAAA,EACvBT,IAAA,CAACJ,MAAM;UAACe,KAAK,EAAC,6BAA6B;UAAAC,OAAO,EAAE,SAAAA,QAAA,EAAI;YAACnB,OAAO,CAACoB,OAAO,CAAC,mDAAmD,CAAC;UAAA,CAAE;UAAAJ,QAAA,EAAE;QAAU,CAAQ;MAAC,CAClJ;IAAC,CACL,CAAC;EAEf,CAAC,MACI,IAAIZ,QAAQ,CAACQ,EAAE,KAAK,SAAS,EAClC,CAEA;AACJ;AAEA,IAAME,MAAM,GAAGb,UAAU,CAACoB,MAAM,CAAC;EAC7BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EAEDX,cAAc,EAAE;IACdY,KAAK,EAAE,KAAK;IACZjB,MAAM,EAAE,GAAG;IACXa,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EAEDE,YAAY,EAAE;IACZD,KAAK,EAAE,MAAM;IACbE,QAAQ,EAAErB,aAAa,GAAC,GAAG;IAC3BsB,MAAM,EAAE;EACV,CAAC;EAEDC,UAAU,EAAE;IACVrB,MAAM,EAAE,EAAE;IACVsB,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE;EAChB,CAAC;EAEDhB,MAAM,EAAE;IACNU,KAAK,EAAE,MAAM;IACbE,QAAQ,EAAErB,aAAa,GAAC,GAAG;IAC3BgB,eAAe,EAAE;EACnB;AAEF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}