{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { ScrollableView } from \"react-native-web/dist/index\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction PopView(prop) {\n  if (!prop.visible) {\n    return;\n  }\n  return _jsx(View, {});\n}\nexport default function GladPicker(props) {\n  var heightAnim = useRef(new Animated.Value(0)).current;\n  var menuPopIn = function menuPopIn() {\n    Animated.timing(heightAnim, {\n      toValue: 400,\n      duration: 200,\n      useNativeDriver: true\n    }).start();\n  };\n  var menuPopOut = function menuPopOut() {\n    Animated.timing(heightAnim, {\n      toValue: 0,\n      duration: 200,\n      useNativeDriver: true\n    }).start();\n  };\n  var data = [{\n    \"value\": \"item1\"\n  }, {\n    \"value\": \"item2\"\n  }, {\n    \"value\": \"item3\"\n  }];\n  return _jsxs(View, {\n    style: {\n      zIndex: 1,\n      position: 'relative',\n      height: 40,\n      width: 400\n    },\n    children: [_jsx(TouchableOpacity, {\n      style: {\n        height: 40,\n        backgroundColor: \"#DDDDDD\"\n      },\n      children: _jsx(Text, {\n        style: {\n          textAlign: 'justify'\n        },\n        children: \" Selected Item \"\n      })\n    }), _jsx(Animated.View, {\n      style: {\n        marginTop: 40,\n        zIndex: 2,\n        position: 'absolute',\n        width: '100%',\n        height: heightAnim,\n        backgroundColor: \"orange\",\n        overflow: 'visible'\n      }\n    })]\n  });\n}","map":{"version":3,"names":["ScrollableView","Modal","Text","Image","StyleSheet","FlatList","Button","React","useState","useRef","useEffect","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","PopView","prop","visible","View","GladPicker","props","heightAnim","Animated","Value","current","menuPopIn","timing","toValue","duration","useNativeDriver","start","menuPopOut","data","style","zIndex","position","height","width","children","backgroundColor","textAlign","marginTop","overflow"],"sources":["Z:/image-generator-front-end/GladPicker.js"],"sourcesContent":["import {View, Animated, ScrollableView, Modal, Text, Image, StyleSheet, FlatList, Button} from 'react-native'\r\nimport React, {useState, useRef, useEffect} from 'react';\r\nimport { TouchableOpacity } from 'react-native-web';\r\n\r\nfunction PopView(prop){\r\n    if(!prop.visible){\r\n        return\r\n    }\r\n\r\n    return (<View> \r\n\r\n    </View>)\r\n}\r\n\r\nexport default function GladPicker(props){\r\n    const heightAnim = useRef(new Animated.Value(0)).current;\r\n\r\n    const menuPopIn = () => {\r\n        Animated.timing(heightAnim, {\r\n            toValue: 400,\r\n            duration: 200,\r\n            useNativeDriver: true,\r\n          }).start();\r\n    };\r\n\r\n    const menuPopOut = () =>{\r\n        Animated.timing(heightAnim, {\r\n            toValue: 0,\r\n            duration: 200,\r\n            useNativeDriver: true,\r\n          }).start();\r\n    }\r\n\r\n    var data = [ {\"value\": \"item1\"},{\"value\": \"item2\"},{\"value\": \"item3\"}];\r\n    \r\n    return(\r\n        <View style={{ zIndex: 1, position: 'relative', height: 40, width: 400, }} >\r\n            <TouchableOpacity style={{height:40, backgroundColor: \"#DDDDDD\"}}>\r\n                <Text style={{ textAlign: 'justify'}}> Selected Item </Text>\r\n            </TouchableOpacity>\r\n            <Animated.View style={{ marginTop: 40, zIndex: 2, position: 'absolute', width: '100%', height: heightAnim, backgroundColor: \"orange\", overflow: 'visible'}}>\r\n\r\n            </Animated.View>   \r\n       </View>\r\n\r\n    )\r\n}"],"mappings":";;SAAwBA,cAAc;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,MAAA;AACtC,OAAOC,KAAK,IAAGC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAO,OAAO;AAAC,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGzD,SAASC,OAAOA,CAACC,IAAI,EAAC;EAClB,IAAG,CAACA,IAAI,CAACC,OAAO,EAAC;IACb;EACJ;EAEA,OAAQL,IAAA,CAACM,IAAI,IAEP,CAAC;AACX;AAEA,eAAe,SAASC,UAAUA,CAACC,KAAK,EAAC;EACrC,IAAMC,UAAU,GAAGb,MAAM,CAAC,IAAIc,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAExD,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;IACpBH,QAAQ,CAACI,MAAM,CAACL,UAAU,EAAE;MACxBM,OAAO,EAAE,GAAG;MACZC,QAAQ,EAAE,GAAG;MACbC,eAAe,EAAE;IACnB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EAChB,CAAC;EAED,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAQ;IACpBT,QAAQ,CAACI,MAAM,CAACL,UAAU,EAAE;MACxBM,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,GAAG;MACbC,eAAe,EAAE;IACnB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EAChB,CAAC;EAED,IAAIE,IAAI,GAAG,CAAE;IAAC,OAAO,EAAE;EAAO,CAAC,EAAC;IAAC,OAAO,EAAE;EAAO,CAAC,EAAC;IAAC,OAAO,EAAE;EAAO,CAAC,CAAC;EAEtE,OACIlB,KAAA,CAACI,IAAI;IAACe,KAAK,EAAE;MAAEC,MAAM,EAAE,CAAC;MAAEC,QAAQ,EAAE,UAAU;MAAEC,MAAM,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAK,CAAE;IAAAC,QAAA,GACtE1B,IAAA,CAACF,gBAAgB;MAACuB,KAAK,EAAE;QAACG,MAAM,EAAC,EAAE;QAAEG,eAAe,EAAE;MAAS,CAAE;MAAAD,QAAA,EAC7D1B,IAAA,CAACX,IAAI;QAACgC,KAAK,EAAE;UAAEO,SAAS,EAAE;QAAS,CAAE;QAAAF,QAAA,EAAC;MAAe,CAAM;IAAC,CAC9C,CAAC,EACnB1B,IAAA,CAACU,QAAQ,CAACJ,IAAI;MAACe,KAAK,EAAE;QAAEQ,SAAS,EAAE,EAAE;QAAEP,MAAM,EAAE,CAAC;QAAEC,QAAQ,EAAE,UAAU;QAAEE,KAAK,EAAE,MAAM;QAAED,MAAM,EAAEf,UAAU;QAAEkB,eAAe,EAAE,QAAQ;QAAEG,QAAQ,EAAE;MAAS;IAAE,CAE5I,CAAC;EAAA,CACf,CAAC;AAGd"},"metadata":{},"sourceType":"module","externalDependencies":[]}