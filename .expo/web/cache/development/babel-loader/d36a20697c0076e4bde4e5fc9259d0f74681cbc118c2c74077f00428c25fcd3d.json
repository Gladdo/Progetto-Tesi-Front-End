{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function GladPicker(props) {\n  var _useState = useState(\"Select a Poi\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedItem = _useState2[0],\n    SetSelectedItem = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    menuVisible = _useState4[0],\n    SetMenuVisibility = _useState4[1];\n  var heightAnim = useRef(new Animated.Value(0)).current;\n  var textHeightAnim = useRef(new Animated.Value(0)).current;\n  var data = props.data;\n  var COMPONENT_WIDTH = props.width;\n  var menuPop = function menuPop() {\n    var nextHeight;\n    var nextTextHeight;\n    if (menuVisible) {\n      nextHeight = 0;\n      nextTextHeight = 0;\n      SetMenuVisibility(false);\n    } else {\n      nextHeight = 200;\n      nextTextHeight = 40;\n      SetMenuVisibility(true);\n    }\n    Animated.timing(heightAnim, {\n      toValue: nextHeight,\n      duration: 200,\n      useNativeDriver: true\n    }).start();\n    Animated.timing(textHeightAnim, {\n      toValue: nextTextHeight,\n      duration: 200,\n      useNativeDriver: true\n    }).start();\n  };\n  var onSelection = function onSelection(itemIndex) {\n    SetSelectedItem(data[itemIndex].name);\n    props.SetSelectedItem(data[itemIndex].name);\n    SetMenuVisibility(false);\n    Animated.timing(heightAnim, {\n      toValue: 0,\n      duration: 200,\n      useNativeDriver: true\n    }).start();\n    Animated.timing(textHeightAnim, {\n      toValue: 0,\n      duration: 200,\n      useNativeDriver: true\n    }).start();\n  };\n  var menuItems = [];\n  if (menuVisible) {\n    var _loop = function _loop() {\n      var itemIndex = i;\n      menuItems.push(_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          onSelection(itemIndex);\n        },\n        children: _jsx(Animated.View, {\n          style: {\n            height: textHeightAnim,\n            justifyContent: 'center',\n            borderBottomWidth: 1\n          },\n          children: _jsxs(Animated.Text, {\n            style: {\n              height: textHeightAnim * 0.5,\n              textAlign: 'center',\n              fontWeight: 'bold',\n              fontSize: 14\n            },\n            children: [\" \", data[i].name, \" \"]\n          })\n        })\n      }, i));\n    };\n    for (var i = 0; i < data.length; i++) {\n      _loop();\n    }\n  }\n  return _jsxs(View, {\n    style: {\n      zIndex: 1,\n      position: 'relative',\n      height: 40,\n      width: COMPONENT_WIDTH\n    },\n    children: [_jsx(TouchableOpacity, {\n      style: {\n        height: 40,\n        backgroundColor: \"#258ef7\"\n      },\n      onPress: menuPop,\n      children: _jsx(View, {\n        style: {\n          height: '100%',\n          justifyContent: 'center'\n        },\n        children: _jsxs(Text, {\n          style: {\n            textAlign: 'center',\n            color: 'white',\n            fontWeight: 'bold',\n            fontSize: 18\n          },\n          children: [\" \", selectedItem, \" \"]\n        })\n      })\n    }), _jsx(Animated.View, {\n      style: {\n        marginTop: 40,\n        zIndex: 2,\n        position: 'absolute',\n        width: '100%',\n        height: heightAnim,\n        backgroundColor: \"#dcecfc\",\n        overflow: 'visible'\n      },\n      children: _jsx(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        children: menuItems\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useRef","useEffect","TouchableOpacity","jsxs","_jsxs","jsx","_jsx","GladPicker","props","_useState","_useState2","_slicedToArray","selectedItem","SetSelectedItem","_useState3","_useState4","menuVisible","SetMenuVisibility","heightAnim","Animated","Value","current","textHeightAnim","data","COMPONENT_WIDTH","width","menuPop","nextHeight","nextTextHeight","timing","toValue","duration","useNativeDriver","start","onSelection","itemIndex","name","menuItems","_loop","i","push","onPress","children","View","style","height","justifyContent","borderBottomWidth","Text","textAlign","fontWeight","fontSize","length","zIndex","position","backgroundColor","color","marginTop","overflow","ScrollView","showsVerticalScrollIndicator"],"sources":["Z:/image-generator-front-end/GladPicker.js"],"sourcesContent":["import {View, Animated, ScrollView, Modal, Text, Image, StyleSheet, FlatList, Button} from 'react-native'\r\nimport React, {useState, useRef, useEffect} from 'react';\r\nimport { TouchableOpacity } from 'react-native-web';\r\n\r\nexport default function GladPicker(props){\r\n    // -------------------------|\r\n    // FUNCTION STATE VARIABLES\r\n    // -------------------------|\r\n    const [selectedItem, SetSelectedItem] = useState(\"Select a Poi\");\r\n    const [menuVisible, SetMenuVisibility] = useState(false);\r\n\r\n    // -------------------------|\r\n    // ANIMATION VARIABLES\r\n    // -------------------------|\r\n    var heightAnim = useRef(new Animated.Value(0)).current;\r\n    var textHeightAnim = useRef(new Animated.Value(0)).current;\r\n\r\n    // -------------------------|\r\n    // UTILITY VARIABLES\r\n    // -------------------------|\r\n    var data = props.data;\r\n    const COMPONENT_WIDTH= props.width;\r\n\r\n    // -------------------------|\r\n    // EVENT FUNCTIONS\r\n    // -------------------------|\r\n\r\n    /* Gladdo: menuPop viene chiamata ogni volta che viene triggerato onPress sulla barra di selezione statica\r\n    La funzione funge come sorta di switch per far comparire e scomparire il menu a comparsa:\r\n        > Se il menu è disabilitato (menuVisible = false), allora si imposta l'height opportuna e si mette menuVisible = true\r\n        > Se il menu è abilitato (menuVisible = true), allora si imposta l'height a 0 e si mette menuVisible = false */\r\n    const menuPop = () => {\r\n        var nextHeight;\r\n        var nextTextHeight;\r\n        if(menuVisible){\r\n            nextHeight=0;\r\n            nextTextHeight=0;\r\n            SetMenuVisibility(false);\r\n        }else{\r\n            nextHeight=200;\r\n            nextTextHeight=40;\r\n            SetMenuVisibility(true);\r\n        }\r\n\r\n        // Funzione di animazione che interpola i valori di heightAnim nel tempo\r\n        Animated.timing(heightAnim, {\r\n            toValue: nextHeight,\r\n            duration: 200,\r\n            useNativeDriver: true,\r\n        }).start();\r\n\r\n        // Funzione di animazione che interpola i valori di textHeightAnim nel tempo\r\n        Animated.timing(textHeightAnim, {\r\n        toValue: nextTextHeight,\r\n        duration: 200,\r\n        useNativeDriver: true,\r\n        }).start();\r\n    };\r\n\r\n    /* Gladdo: Funzione triggerata all'onPress di un'elemento della lista nel menu a comparsa\r\n    Ogni elemento del menu imposta il proprio valore come argomento alla chiamata itemIndex */\r\n    const onSelection = (itemIndex) => {\r\n        SetSelectedItem(data[itemIndex].name);\r\n        props.SetSelectedItem(data[itemIndex].name);\r\n        SetMenuVisibility(false);\r\n\r\n        // Funzione di animazione che interpola i valori di heightAnim nel tempo\r\n        Animated.timing(heightAnim, {\r\n            toValue: 0,\r\n            duration: 200,\r\n            useNativeDriver: true,\r\n        }).start();\r\n\r\n        // Funzione di animazione che interpola i valori di textHeightAnim nel tempo\r\n        Animated.timing(textHeightAnim, {\r\n        toValue: 0,\r\n        duration: 200,\r\n        useNativeDriver: true,\r\n        }).start();\r\n        \r\n    }\r\n\r\n    // -------------------------|\r\n    // PRE-RENDERING\r\n    // -------------------------|\r\n\r\n    // Gladdo: Costruisco la lista di entries del menu a comparsa\r\n    var menuItems = [];\r\n    if(menuVisible){\r\n        for(var i = 0; i < data.length; i ++){\r\n            /* Gladdo: Devo utilizzare un valore const da bindare alla chiamata di onSelection di ciascun elemento; se passo un valore variabile viene passato un riferimento\r\n            ad una stessa variabile PER CIASCUN elemento della lista */\r\n            const itemIndex = i;\r\n            menuItems.push(\r\n                <TouchableOpacity key={i} onPress={() => {onSelection(itemIndex)}}>\r\n                    <Animated.View style={{height: textHeightAnim, justifyContent: 'center', borderBottomWidth: 1}}>\r\n                        <Animated.Text style={{height: textHeightAnim*0.5, textAlign:'center', fontWeight: 'bold', fontSize: 14}} > {data[i].name} </Animated.Text>\r\n                    </Animated.View>\r\n                </TouchableOpacity>\r\n            )\r\n        }\r\n    }\r\n\r\n    // -------------------------|\r\n    // RENDERING\r\n    // -------------------------|\r\n    return(\r\n        <View style={{ zIndex: 1, position: 'relative', height: 40, width: COMPONENT_WIDTH, }} >\r\n            {/* ------------------------------------------------------|\r\n               BARRA DI SELEZIONE STATICA \r\n            |------------------------------------------------------ */}\r\n            <TouchableOpacity style={{height:40, backgroundColor: \"#258ef7\"}} onPress={menuPop}>\r\n                <View style={{height: '100%', justifyContent: 'center'}}>\r\n                    <Text style={{ textAlign: 'center', color: 'white', fontWeight: 'bold', fontSize: 18}}> {selectedItem} </Text>\r\n                </View> \r\n            </TouchableOpacity>\r\n\r\n            {/* ------------------------------------------------------|\r\n               MENU A COMPARSA\r\n            |------------------------------------------------------ */}\r\n            <Animated.View style={{ marginTop: 40, zIndex: 2, position: 'absolute', width: '100%', height: heightAnim, backgroundColor: \"#dcecfc\", overflow: 'visible'}}>\r\n                <ScrollView showsVerticalScrollIndicator={false}>\r\n                    {menuItems}\r\n                </ScrollView>\r\n            </Animated.View>   \r\n       </View>\r\n\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}