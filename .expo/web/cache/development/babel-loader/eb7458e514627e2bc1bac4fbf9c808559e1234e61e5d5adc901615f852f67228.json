{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport GenerateImageForm from \"./GenerateImageForm\";\nimport CreateLoraForm from \"./CreateLoraForm\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    page = _useState2[0],\n    setPage = _useState2[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(CreateLoraForm, {}), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar WINDOW_HEIGHT = Dimensions.get('window').height;\nvar WINDOW_WIDTH = Dimensions.get('window').width;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  form_container: {\n    width: '80%',\n    height: 200,\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  form_element: {\n    width: '100%',\n    maxWidth: WINDOW_HEIGHT - 100,\n    margin: 4\n  },\n  text_input: {\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 4\n  },\n  button: {\n    width: '100%',\n    maxWidth: WINDOW_HEIGHT - 100,\n    backgroundColor: 'red'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","GenerateImageForm","CreateLoraForm","Dimensions","jsx","_jsx","jsxs","_jsxs","App","_useState","useState","_useState2","_slicedToArray","page","setPage","style","styles","container","children","WINDOW_HEIGHT","get","height","WINDOW_WIDTH","width","create","flex","backgroundColor","alignItems","justifyContent","form_container","form_element","maxWidth","margin","text_input","borderWidth","borderRadius","button"],"sources":["Z:/image-generator-front-end/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, View } from 'react-native';\nimport GenerateImageForm from './GenerateImageForm'\nimport CreateLoraForm from './CreateLoraForm'\nimport {Dimensions} from 'react-native';\n\n/* --------------------------------------------------------------------------------------------------------------------------------------------------- |\n> APP HOOK:\n----------------------------------------------------------------------------------------------------------------------------------------------- Gladdo */\n\nexport default function App() {\n  const [page, setPage] = useState(0);\n  return (\n    <View style={styles.container}>\n\n      <CreateLoraForm />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n//<GenerateImageForm /> \n\n// Gladdo: Uutils variables:\nconst WINDOW_HEIGHT = Dimensions.get('window').height;\nconst WINDOW_WIDTH = Dimensions.get('window').width;\n\n/* --------------------------------------------------------------------------------------------------------------------------------------------------- |\n> STYLE:\n----------------------------------------------------------------------------------------------------------------------------------------------- Gladdo */\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  form_container: {\n    width: '80%',\n    height: 200,\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  form_element: {\n    width: '100%',\n    maxWidth: WINDOW_HEIGHT-100,\n    margin: 4,\n  }, \n\n  text_input: {\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 4,\n  },\n\n  button: {\n    width: '100%',\n    maxWidth: WINDOW_HEIGHT-100,\n    backgroundColor: 'red',\n  }, \n\n});\n\n\n\n/* --------------------------------------------------------------------------------------------------------\nSNIPPETS:\n-----------------------------------------------------------------------------------------------------------\n\n--------------------\n>>> Funzione che fetcha delle risorse json e ci popola un attributo dello stato della funzione (poi_name)\n--------------------\n\n  function foo(){\n    const [poi_name, setPoiName] = useState(\"\");\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n      fetch(\"http://127.0.0.1:8000/diffusers_api/test_serializer\")\n      .then( (response) =>  response.json())\n      .then( \n        json => {\n          setPoiName(json['pois']);\n          console.log(json['pois']);\n          setLoaded(true);\n        }\n      )\n    }, []);\n\n    return\n\n  }\n\n--------------------\n--------------------\n*/\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAE5C,OAAOC,iBAAiB;AACxB,OAAOC,cAAc;AAAwB,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAO7C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAwBC,QAAQ,CAAC,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAA5BI,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpB,OACEJ,KAAA,CAACP,IAAI;IAACe,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAE5Bb,IAAA,CAACH,cAAc,IAAE,CAAC,EAClBG,IAAA,CAACP,SAAS;MAACiB,KAAK,EAAC;IAAM,CAAE,CAAC;EAAA,CACtB,CAAC;AAEX;AAIA,IAAMI,aAAa,GAAGhB,UAAU,CAACiB,GAAG,CAAC,QAAQ,CAAC,CAACC,MAAM;AACrD,IAAMC,YAAY,GAAGnB,UAAU,CAACiB,GAAG,CAAC,QAAQ,CAAC,CAACG,KAAK;AAMnD,IAAMP,MAAM,GAAGjB,UAAU,CAACyB,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EAEDC,cAAc,EAAE;IACdN,KAAK,EAAE,KAAK;IACZF,MAAM,EAAE,GAAG;IACXI,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EAEDE,YAAY,EAAE;IACZP,KAAK,EAAE,MAAM;IACbQ,QAAQ,EAAEZ,aAAa,GAAC,GAAG;IAC3Ba,MAAM,EAAE;EACV,CAAC;EAEDC,UAAU,EAAE;IACVZ,MAAM,EAAE,EAAE;IACVa,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE;EAChB,CAAC;EAEDC,MAAM,EAAE;IACNb,KAAK,EAAE,MAAM;IACbQ,QAAQ,EAAEZ,aAAa,GAAC,GAAG;IAC3BO,eAAe,EAAE;EACnB;AAEF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}