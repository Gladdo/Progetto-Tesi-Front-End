{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport ImagePicker from \"./ImagePicker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction generate_url(poi_name, poi_image_name, action_name, action_shot_type, age, gender, other_details) {\n  return \"http://127.0.0.1:8000/diffusers_api/generate_image?\" + \"poi_name=\" + poi_name + \"&poi_image_name=\" + poi_image_name + \"&action_name=\" + action_name + \"&action_shot_type=\" + action_shot_type + \"&age=\" + age + \"&gender=\" + gender + \"&other_details=\" + other_details;\n}\nfunction GenerateImageForm() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    available_pois = _useState2[0],\n    setAvailablePois = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loaded = _useState4[0],\n    setLoaded = _useState4[1];\n  var generate_image = function generate_image() {};\n  useEffect(function () {\n    fetch(\"http://127.0.0.1:8000/diffusers_api/test_serializer\").then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      setAvailablePois(json['pois']);\n      console.log(json['pois']);\n      setLoaded(true);\n    });\n  }, []);\n  var poi_names = [];\n  for (var i = 0; i < available_pois.length; i++) {\n    poi_names.push(_jsx(Text, {\n      children: available_pois[i].name\n    }, i));\n  }\n  if (loaded) {\n    return _jsxs(View, {\n      style: styles.form_container,\n      children: [_jsx(Text, {\n        style: styles.form_element,\n        children: \"Poi names:  \"\n      }), poi_names, _jsx(Text, {\n        style: styles.form_element,\n        children: \"Other Details \"\n      }), _jsx(TextInput, {\n        style: [styles.text_input, styles.form_element],\n        placeholder: \" write here... \",\n        onChangeText: function onChangeText(newText) {\n          return setPoiName(newText);\n        }\n      }), _jsx(View, {\n        style: styles.generate_button,\n        children: _jsx(Button, {\n          title: \"GENERATE IMAGE\",\n          onPress: generate_image,\n          children: \" GENERATE \"\n        })\n      }), _jsx(ImagePicker, {})]\n    });\n  } else {\n    return _jsx(View, {\n      children: _jsx(Text, {\n        children: \" Loading Form ... \"\n      })\n    });\n  }\n}\nexport default function App() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(GenerateImageForm, {}), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  form_container: {\n    width: '80%',\n    height: 200,\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  form_element: {\n    width: '100%',\n    margin: 4\n  },\n  text_input: {\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 4\n  },\n  generate_button: {\n    width: '80%',\n    backgroundColor: 'red'\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","useEffect","StyleSheet","Text","View","Button","TextInput","Picker","ImagePicker","jsx","_jsx","jsxs","_jsxs","generate_url","poi_name","poi_image_name","action_name","action_shot_type","age","gender","other_details","GenerateImageForm","_useState","_useState2","_slicedToArray","available_pois","setAvailablePois","_useState3","_useState4","loaded","setLoaded","generate_image","fetch","then","response","json","console","log","poi_names","i","length","push","children","name","style","styles","form_container","form_element","text_input","placeholder","onChangeText","newText","setPoiName","generate_button","title","onPress","App","container","create","flex","backgroundColor","alignItems","justifyContent","width","height","margin","borderWidth","borderRadius"],"sources":["Z:/image-generator-front-end/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState, useEffect} from 'react';\nimport { StyleSheet, Text, View, Button, TextInput, Picker } from 'react-native';\nimport ImagePicker from './ImagePicker'\n\n\nfunction generate_url(poi_name, poi_image_name, action_name, action_shot_type, age, gender, other_details){\n  return \"http://127.0.0.1:8000/diffusers_api/generate_image?\" + \n    \"poi_name=\" + poi_name + \n    \"&poi_image_name=\" + poi_image_name +\n    \"&action_name=\" + action_name + \n    \"&action_shot_type=\" + action_shot_type +\n    \"&age=\" + age + \n    \"&gender=\" + gender +\n    \"&other_details=\" + other_details;\n}\n\nfunction GenerateImageForm(){\n  // Gladdo: Le seguenti strutture definiscono lo stato associato alla funzione; attraverso useState una funzione, un pò come una classe, può avere uno stato associato.\n  const [available_pois, setAvailablePois] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n\n  // Gladdo: Definisco un'arrow function così che il this si riferisca allo stato della funzione in cui è definita l'arrow function\n  const generate_image = () => {\n\n  }\n\n  /* Gladdo: useEffect viene chiamata da React-Native solo la prima volta che il componente associato a GenerateImageForm viene renderizzato.\n  Il corpo di useEffect fetcha dei dati da un server e utilizza tali dati per modificare lo stato della funzione; il cambiamento di stato triggera il re-rendering del componente.\n  Nel re-rendering viene poi utilizzato i dati fetchati per popolare i campi del form. */\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/diffusers_api/test_serializer\")\n    .then( (response) =>  response.json())\n    .then( \n      json => {\n        setAvailablePois(json['pois']);\n        console.log(json['pois']);\n        setLoaded(true);\n      }\n    )\n  }, []);\n\n  /* Gladdo: Itera sui pois fetchati e ci costruisce un componente */\n  var poi_names = [];\n\n  for(var i = 0; i < available_pois.length; i++){\n    poi_names.push(\n      <Text key={i}>\n        {available_pois[i].name}\n      </Text>\n    );\n  }\n\n  if(loaded){\n    return (\n      <View style={styles.form_container}>\n        <Text style={styles.form_element}>Poi names:  </Text>\n        {poi_names}\n        <Text style={styles.form_element}>Other Details </Text>\n        <TextInput\n          style={[styles.text_input, styles.form_element]}\n          placeholder=\" write here... \"\n          onChangeText={newText => setPoiName(newText)}\n        />\n        <View style={styles.generate_button}>\n          <Button  title=\"GENERATE IMAGE\" onPress={generate_image} > GENERATE </Button>\n        </View>\n        <ImagePicker />\n      </View>\n    )\n  }else{\n    return (\n      <View>\n        <Text> Loading Form ... </Text>\n      </View>\n    )\n  }\n  \n\n}\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <GenerateImageForm /> \n      \n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  form_container: {\n    width: '80%',\n    height: 200,\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  form_element: {\n    width: '100%',\n    margin: 4,\n  }, \n\n  text_input: {\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 4,\n  },\n\n  generate_button: {\n    width: '80%',\n    backgroundColor: 'red',\n  }, \n\n});\n\n\n\n/* --------------------------------------------------------------------------------------------------------\nSNIPPETS:\n-----------------------------------------------------------------------------------------------------------\n\n--------------------\n>>> Funzione che fetcha delle risorse json e ci popola un attributo dello stato della funzione (poi_name)\n--------------------\n\n  function foo(){\n    const [poi_name, setPoiName] = useState(\"\");\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n      fetch(\"http://127.0.0.1:8000/diffusers_api/test_serializer\")\n      .then( (response) =>  response.json())\n      .then( \n        json => {\n          setPoiName(json['pois']);\n          console.log(json['pois']);\n          setLoaded(true);\n        }\n      )\n    }, []);\n\n    return\n\n  }\n\n--------------------\n--------------------\n*/\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}